{"version":3,"file":"ExpoNordicDfuModule.js","sourceRoot":"","sources":["../src/ExpoNordicDfuModule.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,mBAAmB,EAAE,MAAM,MAAM,CAAA;AAExD,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAA;AA0BvC,MAAM,SAAS,GAAG,mBAAmB,CAAsB,qBAAqB,CAAC,CAAA;AAEjF,MAAM,oBAAoB;IACJ;IAApB,YAAoB,SAA8B;QAA9B,cAAS,GAAT,SAAS,CAAqB;IAAG,CAAC;IAEtD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,SAAS,CAAA;IACvB,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,MAAsB;QACnC,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE,CAAC;YAC1B,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CACrC,MAAM,CAAC,aAAa,EACpB,MAAM,CAAC,OAAO,EACd,MAAM,CAAC,GAAG,EAAE,iBAAiB,EAC7B,MAAM,CAAC,GAAG,EAAE,aAAa,EACzB,MAAM,CAAC,kCAAkC,EACzC,MAAM,CAAC,sBAAsB,CAC9B,CAAA;QACH,CAAC;aAAM,CAAC;YACN,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,eAAe,CACzC,MAAM,CAAC,aAAa,EACpB,MAAM,CAAC,OAAO,EACd,MAAM,CAAC,OAAO,EAAE,UAAU,EAC1B,MAAM,CAAC,OAAO,EAAE,QAAQ,EACxB,MAAM,CAAC,OAAO,EAAE,eAAe,EAC/B,MAAM,CAAC,kCAAkC,EACzC,MAAM,CAAC,sBAAsB;YAC7B,sEAAsE;YACtE,8BAA8B;YAC9B,+BAA+B;aAChC,CAAA;QACH,CAAC;IACH,CAAC;IAED,KAAK,CAAC,QAAQ;QACZ,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE,CAAC;YAC1B,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAA;QAC3C,CAAC;aAAM,CAAC;YACN,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAA;QAC/C,CAAC;IACH,CAAC;CACF;AAED,eAAe,IAAI,oBAAoB,CAAC,SAAS,CAAC,CAAA","sourcesContent":["import { NativeModule, requireNativeModule } from 'expo'\nimport { ExpoSettingsModuleEvents, StartDFUParams } from './ExpoNordicDfu.types'\nimport { Platform } from 'react-native'\n\ndeclare class ExpoNordicDfuModule extends NativeModule<ExpoSettingsModuleEvents> {\n  startAndroidDfu(\n    deviceAddress: string,\n    fileUri: string,\n    deviceName?: string,\n    keepBond?: boolean,\n    numberOfRetries?: number,\n    packetReceiptNotificationParameter?: number,\n    prepareDataObjectDelay?: number,\n    rebootTime?: number,\n    restoreBond?: boolean\n  ): Promise<void>\n  abortAndroidDfu(): Promise<void>\n  startIosDfu(\n    deviceAddress: string,\n    fileUri: string,\n    connectionTimeout?: number,\n    disableResume?: boolean,\n    packetReceiptNotificationParameter?: number,\n    prepareDataObjectDelay?: number\n  ): Promise<void>\n  abortIosDfu(): Promise<void>a\n}\n\nconst DfuModule = requireNativeModule<ExpoNordicDfuModule>('ExpoNordicDfuModule')\n\nclass CrossplatformWrapper {\n  constructor(private dfuModule: ExpoNordicDfuModule) {}\n\n  get module() {\n    return this.dfuModule\n  }\n\n  async startDfu(params: StartDFUParams): Promise<void> {\n    if (Platform.OS === 'ios') {\n      return await this.dfuModule.startIosDfu(\n        params.deviceAddress,\n        params.fileUri,\n        params.ios?.connectionTimeout,\n        params.ios?.disableResume,\n        params.packetReceiptNotificationParameter,\n        params.prepareDataObjectDelay\n      )\n    } else {\n      return await this.dfuModule.startAndroidDfu(\n        params.deviceAddress,\n        params.fileUri,\n        params.android?.deviceName,\n        params.android?.keepBond,\n        params.android?.numberOfRetries,\n        params.packetReceiptNotificationParameter,\n        params.prepareDataObjectDelay\n        // See android/src/main/java/com/getquip/nordic/ExpoNordicDfuModule.kt\n        // params.android?.rebootTime,\n        // params.android?.restoreBond,\n      )\n    }\n  }\n\n  async abortDfu(): Promise<void> {\n    if (Platform.OS === 'ios') {\n      return await this.dfuModule.abortIosDfu()\n    } else {\n      return await this.dfuModule.abortAndroidDfu()\n    }\n  }\n}\n\nexport default new CrossplatformWrapper(DfuModule)\n"]}